on:
  push:
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Upload Release Assets

jobs:
  build:
    name: Upload Release Assets
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Get Version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}
        
      - name: Build Dashboard ðŸ”§
        run: |
          ./install-dependencies.sh
          ./build-dashboard.sh
          
      - name: Set up Python
        uses: actions/setup-python@v1
      - name: Install Python Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install platformio
    
      - name: Build PlatformIO Binaries
        run: |
          #platformio run -e esp8266-4m-32x64 # Weird bug where have to run twice with .ino source files, doesn't seem to happen with GH Actions
          platformio run -e esp8266-4m-32x64
          platformio run -e esp8266-4m-32x64 -t buildfs
          mv ./.pio/build/esp8266-4m-32x64/firmware.bin ./firmware-esp8266-4m-32x64-${{ steps.get_version.outputs.VERSION }}.bin
          mv ./.pio/build/esp8266-4m-32x64/littlefs.bin ./fs-esp8266-4m-32x64-${{ steps.get_version.outputs.VERSION }}.bin
          
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      
      - name: Upload Binaries
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          hub release edit -a ./firmware-esp8266-4m-32x64-${{ steps.get_version.outputs.VERSION }}.bin -m "" ${{ github.ref }}
          hub release edit -a ./fs-esp8266-4m-32x64-${{ steps.get_version.outputs.VERSION }}.bin -m "" ${{ github.ref }}
        
      #- name: Upload Release Firmware Binary esp8266-4m-32x64
        #uses: actions/upload-release-asset@v1
        #env:
          #GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        #with:
          #upload_url: ${{ steps.create_release.outputs.upload_url }}
          #asset_path: ./firmware-esp8266-4m-32x64-${{ steps.get_version.outputs.VERSION }}.bin
          #asset_name: ESP8266 4M 32x64 Firmware(bin)
          #asset_content_type: application/octet-stream
          
      #- name: Upload Release FS Binary esp8266-4m-32x64
        #uses: actions/upload-release-asset@v1
        #env:
          #GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        #with:
          #upload_url: ${{ steps.create_release.outputs.upload_url }}
          #asset_path: ./fs-esp8266-4m-32x64-${{ steps.get_version.outputs.VERSION }}.bin
          #asset_name: ESP8266 4M 32x64 Firmware(bin)
          #asset_content_type: application/octet-stream
